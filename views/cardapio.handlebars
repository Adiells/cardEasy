<div class="cardapio-container">

    <section class="info-restaurante">
        <img src="/uploads/profilePhoto/{{restaurante.image_url}}" alt="Logo do Restaurante">
        <div class="text-info">
            <h1>{{restaurante.nome}}</h1>
            <p>{{restaurante.description}}</p>
        </div>
    </section>

    {{#if vazio.vazio}}
    <div class="empty-menu">
        <p>O cardápio ainda não foi adicionado. Volte mais tarde!</p>
    </div>
    {{else}}

    <section class="categorias">
        <button class="categoria-btn active" data-categoria="todos">Todos</button>
        {{#each categorias}}
            <button class="categoria-btn" data-categoria="{{this.categoria}}">{{this.categoria}}</button>
        {{/each}}
    </section>

    <section class="produtos-grid">
        {{#each produtos}}
        <div class="produto-card" data-categoria="{{this.categoria}}" data-titulo="{{this.titulo}}" data-preco="{{this.preco}}" data-descricao="{{this.descricao}}" data-imagem="/uploads/Restaurante{{this.imagem}}" data-id="{{this.id}}">
            <img src="/uploads/Restaurante{{this.imagem}}" alt="{{this.titulo}}">
            <div class="produto-info">
                <div class="produto-texto">
                    <h3>{{this.titulo}}</h3>
                    <span class="preco">R$ {{this.preco}}</span>
                </div>
                <div class="action">
                    {{#if ../isOwner}}
                    <button class="action-btn" title="Editar produto" id="edit_btn">
                        <i class="fas fa-pencil-alt"></i>
                    </button>
                    <button class="action-btn" title="Apagar produto" id="delete_btn">
                        <i class="fas fa-trash"></i>
                    </button>
                    {{/if}}
                    <button class="action-btn" title="Adicionar ao carrinho" id="add_carrinho">
                        <i class="fas fa-shopping-cart"></i>
                    </button>
                </div>
            </div>
        </div>
        {{/each}}
    </section>
    {{/if}}

</div>

<div id="modal-produto" class="modal-overlay">
    <div class="modal-conteudo">
        <button class="modal-fechar">&times;</button>
        <img id="modal-img" src="" alt="Imagem do produto">
        <div class="modal-info">
            <h2 id="modal-titulo"></h2>
            <p id="modal-descricao"></p>
            <div class="modal-acao">
                <span id="modal-preco" class="preco"></span>
                <button class="add-carrinho-btn-modal">
                    <i class="fas fa-shopping-cart"></i>
                    Adicionar ao Carrinho
                </button>
            </div>
        </div>
    </div>
</div>

<div id="modal-delete" class="modal-overlay">
    <div class="modal-conteudo">
        <button class="modal-fechar">&times;</button>
        <div class="modal-info">
            <h2 id="modal-titulo">Tem certeza que deseja excluir esse produto?</h2>
            <div class="modal-acao">
                <button class="add-carrinho-btn-modal" id="button-delete">
                    Deletar
                </button>
            </div>
        </div>
    </div>
</div>
<div id="modal-edit" class="modal-overlay" >
    <div class="modal-conteudo modal-form">
        <button class="modal-fechar">&times;</button>
        
        <h1><i class="fas fa-pencil-alt"></i> Editar Produto</h1>
        
        <form id="editForm" role="form">
            <input type="hidden" id="edit-produto-id" name="id">

            <div class="form-group">
                <label for="edit-nome"><i class="fas fa-utensils"></i> Nome do Prato</label>
                <input type="text" id="edit-nome" name="nome" placeholder="Ex: Hambúrguer Artesanal" required>
            </div>

            <div class="form-group">
                <label for="edit-descricao"><i class="fas fa-align-left"></i> Descrição</label>
                <textarea id="edit-descricao" name="descricao" rows="3" placeholder="Descreva os ingredientes e preparo..." required></textarea>
            </div>

            <div class="form-group">
                <label for="edit-preco"><i class="fas fa-tag"></i> Preço (R$)</label>
                <input type="number" id="edit-preco" name="preco" step="0.01" min="0" placeholder="Ex: 29.90" required>
            </div>

            <div class="form-group">
                <label for="edit-categoria"><i class="fas fa-layer-group"></i> Categoria</label>
                <input type="text" id="edit-categoria" name="categoria" placeholder="Ex: Bebidas, Lanches, Sobremesas...">
            </div>

            <button type="submit" class="add-carrinho-btn-modal">
                <i class="fas fa-save"></i> Salvar Alterações
            </button>
        </form>
    </div>
</div>

<style>
    :root {
        --cor-principal: #FF7A33;
        --fundo: #1c1c1c;
        --fundo-card: #2a2a2a;
        --texto: #f0f0f0;
        --texto-secundario: #a0a0a0;
        --borda: #444;
    }
    body {
        margin: 0;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background-color: var(--fundo);
        color: var(--texto);
    }
    .cardapio-container {
        max-width: 1100px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    /* 1. Info Restaurante */
    .info-restaurante {
        text-align: center;
        margin-bottom: 2rem;
    }
    {{!-- .text-info{
        display: flex;
        flex-direction: row;
    } --}}
    .info-restaurante img { width: 100px; height: 100px; border-radius: 50%; object-fit: cover; border: 3px solid var(--cor-principal); }
    .info-restaurante h1 { margin: 0.5rem 0; color: var(--cor-principal); }
    .info-restaurante p { color: var(--texto-secundario); max-width: 600px; margin: 0 auto; }

    /* 2. Categorias */
    .categorias { display: flex; justify-content: center; gap: 0.5rem; flex-wrap: wrap; margin-bottom: 2rem; }
    .categoria-btn { background-color: var(--fundo-card); color: var(--texto); border: 1px solid var(--borda); padding: 0.5rem 1rem; border-radius: 20px; cursor: pointer; transition: all 0.2s ease; }
    .categoria-btn:hover, .categoria-btn.active { background-color: var(--cor-principal); color: var(--fundo); border-color: var(--cor-principal); }
    .categoria-btn.active { font-weight: bold; }

    /* 3. Grid de Produtos */
    .produtos-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 1.5rem; }
    .produto-card { background-color: var(--fundo-card); border-radius: 8px; overflow: hidden; border: 1px solid var(--borda); transition: transform 0.2s ease, box-shadow 0.2s ease; }
    .produto-card:hover { transform: translateY(-5px); box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); }
    .produto-card img { width: 100%; height: 160px; object-fit: cover; cursor: pointer; }
    .produto-info { padding: 1rem; display: flex; align-items: center; justify-content: space-between; } /* NOVO: Flexbox para alinhar texto e botão */
    .produto-info h3 { margin: 0; font-size: 1.1rem; }
    .preco { color: var(--cor-principal); font-weight: bold; font-size: 1.1rem; }
    .produto-card.hidden { display: none; }
    
    /* NOVO: Estilo para o botão de carrinho no card */
    .action{
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
    }
    .action-btn{
        background-color: transparent;
        border: 1px solid var(--cor-principal);
        color: var(--cor-principal);
        width: 38px;
        height: 38px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        flex-shrink: 0; /* Impede que o botão encolha */
    }
    .action-btn:hover {
        background-color: var(--cor-principal);
        color: var(--fundo);
    }.empty-menu {
        text-align: center;
        padding: 2rem;
        background-color: var(--fundo-card); /* Fundo similar aos cards existentes */
        border: 1px solid var(--borda); /* Borda similar */
        border-radius: 8px;
        margin-top: 2rem; /* Espaço do topo */
        color: var(--texto-secundario); /* Cor de texto discreta */
        font-style: italic;
        }
            
    /* 4. Modal */
    .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.8); display: none; align-items: center; justify-content: center; z-index: 1000; }
    .modal-conteudo { background: var(--fundo-card); padding: 2rem; border-radius: 8px; position: relative; width: 90%; max-width: 500px; }
    .modal-fechar { position: absolute; top: 10px; right: 15px; background: none; border: none; color: var(--texto); font-size: 2rem; cursor: pointer; }
    .modal-conteudo img { width: 100%; height: 200px; object-fit: cover; border-radius: 4px; margin-bottom: 1rem; }
    #modal-titulo { margin: 0 0 0.5rem 0; color: var(--cor-principal); }
    #modal-descricao { color: var(--texto-secundario); margin-bottom: 1.5rem; }

    /* NOVO: Estilos para a área de ação do modal */
    .modal-acao {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }
    .add-carrinho-btn-modal {
        background-color: var(--cor-principal);
        color: var(--fundo);
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }
    .add-carrinho-btn-modal:hover {
        opacity: 0.65;
    }
    /* 5. Estilos para o Modal de Formulário (Editar) */
    .modal-conteudo.modal-form {
        max-width: 600px; /* Um pouco maior para o formulário */
    }

    .modal-form h1 {
        color: var(--cor-principal);
        text-align: center;
        margin-top: 0;
        margin-bottom: 1.5rem;
        font-size: 1.5rem;
    }

    .modal-form h1 i {
        margin-right: 0.5rem;
    }

    .modal-form .form-group {
        margin-bottom: 1rem;
    }

    .modal-form label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--texto-secundario);
        font-weight: bold;
        font-size: 0.9rem;
    }

    .modal-form input[type="text"],
    .modal-form input[type="number"],
    .modal-form textarea {
        width: 100%;
        padding: 0.8rem;
        border-radius: 4px;
        border: 1px solid var(--borda);
        background-color: var(--fundo);
        color: var(--texto);
        font-size: 1rem;
        box-sizing: border-box; /* Garante que o padding não afete a largura total */
        transition: border-color 0.2s ease;
    }

    .modal-form input[type="text"]:focus,
    .modal-form input[type="number"]:focus,
    .modal-form textarea:focus {
        outline: none;
        border-color: var(--cor-principal);
    }

    .modal-form input[type="file"] {
        color: var(--texto-secundario);
        font-size: 0.9rem;
    }

    .modal-form small {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.8rem;
        color: var(--texto-secundario);
    }

    /* Reutiliza o estilo do botão do modal, mas garante largura total e alinhamento */
    #editForm .add-carrinho-btn-modal {
        width: 100%;
        margin-top: 1rem;
        justify-content: center; /* Centraliza o ícone e o texto */
    }

</style>
{{#section 'script'}}
<script src="/js/showToast.js"></script>
<script src="/js/processFormRequest.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const botoesCategoria = document.querySelectorAll('.categoria-btn');
        const todosProdutos = document.querySelectorAll('.produto-card');
        botoesCategoria.forEach(botao => {
            botao.addEventListener('click', () => {
                document.querySelector('.categoria-btn.active').classList.remove('active');
                botao.classList.add('active');
                const categoriaSelecionada = botao.dataset.categoria;
                todosProdutos.forEach(produto => {
                    const deveEsconder = categoriaSelecionada !== 'todos' && produto.dataset.categoria !== categoriaSelecionada;
                    produto.classList.toggle('hidden', deveEsconder);
                });
            });
        });

        function deletarPrato(id){
            fetch('/deletar-pratos', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({id})
            })
             .then(response => {
                if (response.ok){
                    showToast(`Sucesso ao deletar prato!`)
                    window.location.reload()
                }else{
                    showToast(`Houve um erro ${err}`, true)
                }
            })
             .catch(error => console.log('Erro na requisição', error))
        }
            
        // --- LÓGICA DO MODAL DE PRODUTO ---
        const modalProduto = document.getElementById('modal-produto');
        const modalDelete = document.querySelector('#modal-delete')
        const modalFechar = document.querySelectorAll('.modal-fechar')
        const modalEdit = document.querySelector('#modal-edit')
        
        todosProdutos.forEach(produto => {
            // Adiciona o listener ao card 
            produto.addEventListener('click', (event) => {
                if (event.target.closest('#add_carrinho')) {
                    const data = produto.dataset;
                    document.getElementById('modal-img').src = data.imagem;
                    document.getElementById('modal-titulo').textContent = data.titulo;
                    document.getElementById('modal-descricao').textContent = data.descricao;
                    document.getElementById('modal-preco').textContent = `R$ ${data.preco}`;
                    modalProduto.style.display = 'flex';                    
                }else if (event.target.closest('#delete_btn')){
                    modalDelete.style.display = 'flex';
                }else if (event.target.closest('#edit_btn')){
                    modalEdit.style.display = 'flex'
                    const data = produto.dataset;
                    document.getElementById('edit-produto-id').value = data.id
                    document.getElementById('edit-nome').value = data.titulo
                    document.getElementById('edit-descricao').value = data.descricao
                    document.getElementById('edit-preco').value = data.preco
                    document.getElementById('edit-categoria').value = data.categoria
                }
                document.getElementById('button-delete').addEventListener('click', () => {
                    deletarPrato(produto.dataset.id)
                    modalDelete.style.display = 'none'
                })
            });
        });
        function fecharModal(modal){ 
            return modal.style.display = 'none' 
        }
        modalFechar[0].addEventListener('click', () => fecharModal(modalProduto));
        modalProduto.addEventListener('click', (event) => { if (event.target === modalProduto) fecharModal(modalProduto); });

        modalFechar[1].addEventListener('click', () => fecharModal(modalDelete));
        modalDelete.addEventListener('click', (event) => { if (event.target === modalDelete) fecharModal(modalDelete); });

        modalFechar[2].addEventListener('click', () => fecharModal(modalEdit));
        modalEdit.addEventListener('click', (event) => { if (event.target === modalEdit) fecharModal(modalEdit); });
    });

    formId = document.getElementById('editForm')
    processFormRequest(formId, '/api/edit-dish', 'Prato editado com sucesso', ['id', 'nome', 'descricao', 'preco', 'categoria'], false, 'PATCH', true)
    
    
</script>
{{/section}}